# Generated by Django 2.0.9 on 2018-11-09 08:55

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DieselSchemaMigrations',
            fields=[
                ('version', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('run_on', models.DateTimeField()),
            ],
            options={
                'db_table': '__diesel_schema_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GithubIssues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('labels', models.TextField()),
                ('url', models.TextField()),
                ('data', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'github_issues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GithubIssuesFetches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repo', models.CharField(max_length=255)),
                ('data', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'github_issues_fetches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GithubPulls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('repo', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('labels', models.TextField()),
                ('url', models.TextField()),
                ('data', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'github_pulls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GithubPullsFetches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repo', models.CharField(max_length=255)),
                ('data', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'github_pulls_fetches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GithubRepos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repo', models.CharField(max_length=255)),
                ('url', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'github_repos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rules',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('reply_to', models.TextField(blank=True, null=True)),
                ('authors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('branches', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('paths', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('projects', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('to', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
            ],
            options={
                'db_table': 'rules',
                'managed': False,
            },
        ),
    ]
